@use "sass:math";
$base: 16;
@function px-to-rem($px) {
  @return math.div($px, $base) * 1rem;
}

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: px-to-rem(768)) {
      @content;
    }
  }

  @if $breakpoint == tablet {
    @media only screen and (max-width: px-to-rem(1024)) {
      @content;
    }
  }

  @if $breakpoint == desktop {
    @media only screen and (max-width: px-to-rem(1440)) {
      @content;
    }
  }
}

.languageSelect {
  position: relative;
  width: 130px;

  @include respond(phone) {
    width: 120px;
  }
}

.selectButton {
  padding: 5px 10px 4px;
  width: 130px;
  background-color: var(--bg-color);
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: all 0.4s ease;
  // &:hover {
  //   background-color: var(--brand-color);
  //   color: #fff;
  // }

  @include respond(phone) {
    width: 120px;
    font-size: px-to-rem(13);
  }
}

.arrow {
  font-size: 0.8em;
}

.optionsList {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background-color: var(--bg-color);
  border-top: none;
  border-radius: 0 0 4px 4px;
  list-style-type: none;
  padding: 0;
  margin: 0;
  max-height: 150px;
  overflow-y: auto;
  z-index: 1;
}

.option {
  padding: 8px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: space-between;
  transition: all 0.4s ease;

  @include respond(phone) {
    padding: 6px;
    font-size: px-to-rem(14);
  }
}

// .option:hover {
//   background-color: var(--brand-color);
//   color: #fff;
// }
