@use "sass:math";
$base: 16;
@function px-to-rem($px) {
  @return math.div($px, $base) * 1rem;
}

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: px-to-rem(768)) {
      @content;
    }
  }

  @if $breakpoint == tablet {
    @media only screen and (max-width: px-to-rem(1024)) {
      @content;
    }
  }

  @if $breakpoint == desktop {
    @media only screen and (max-width: px-to-rem(1440)) {
      @content;
    }
  }
}

.modalContainer {
  position: absolute;
  top: 0;
  left: 0;
  min-width: 100%;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.8);
  z-index: 9999;
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal {
  padding: 20px;
  margin: 20px;
  max-width: 450px;
  background-color: var(--bg-color);
  flex-grow: 1;
  border: 1px solid wheat;
  border-radius: 24px;
}

.title {
  font-weight: 700;
  font-size: px-to-rem(16);
  line-height: 120%;
  letter-spacing: 0.12em;
}

.label {
  font-weight: 700;
  font-size: px-to-rem(14);
  line-height: 120%;
  letter-spacing: 0.12em;
}

.input {
  margin-top: 5px;
  padding: 10px;
  border-radius: 8px;
  border: 1px solid #ccc;
  background-color: #fff;
  width: 100%;
  background-color: var(--bg-color);
}

.btn {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: px-to-rem(5);
  font-weight: 700;
  font-size: 10px;
  letter-spacing: 0.11em;
  text-transform: uppercase;
  border-radius: px-to-rem(8);
  color: var(--bg-color);
  padding: px-to-rem(10);
  background-color: #fff;
  transition: all 0.4s ease;

  &:hover {
    background-color: rgba(255, 255, 255, 0.75);
  }

  @include respond(tablet) {
    font-size: px-to-rem(14);
    padding: px-to-rem(15);
  }

  @include respond(phone) {
    font-size: px-to-rem(10);
    padding: px-to-rem(10);
    gap: px-to-rem(8);
  }
}

.icon {
  @include respond(phone) {
    width: 15px;
  }
}
