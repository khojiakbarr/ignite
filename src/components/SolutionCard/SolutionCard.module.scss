@use "sass:math";
$base: 16;
@function px-to-rem($px) {
  @return math.div($px, $base) * 1rem;
}

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: px-to-rem(768)) {
      @content;
    }
  }

  @if $breakpoint == tablet {
    @media only screen and (max-width: px-to-rem(1024)) {
      @content;
    }
  }

  @if $breakpoint == desktop {
    @media only screen and (max-width: px-to-rem(1440)) {
      @content;
    }
  }
}

.card {
  max-width: 282px;
  height: 282px;
  border-radius: 24px;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  padding: 24px;
  transition: all 0.4s ease;
  @include respond(desktop) {
    height: 250px;
    padding: 23px;
  }

  @include respond(tablet){
    max-width: 300px;
    height: 300px;
  }

  @include respond(phone){
    max-width: 200px;
    height: 200px;
    padding: 16px;
  }

  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.1); // Shaffof fon
    backdrop-filter: blur(0px); // Default blur 0 boâ€˜lsin
    transition: backdrop-filter 0.4s ease;
  }

  &:hover::after {
    backdrop-filter: blur(10px);
    background: rgba(0, 0, 0, 0.356);
  }
  &:hover {
    .description {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

.content {
  position: relative;
  z-index: 1;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.title {
  color: white;
  font-size: 20px;
  font-weight: bold;

  @include respond(desktop) {
    font-size: px-to-rem(18);
  }

  @include respond(phone) {
    font-size: px-to-rem(12);
  }
}

.description {
  color: white;
  font-size: 16px;
  line-height: 1.5;
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.3s ease;
  margin: 0;
  @include respond(desktop) {
    font-size: px-to-rem(15);
  }

  @include respond(phone) {
    font-size: px-to-rem(10);
  }
}
